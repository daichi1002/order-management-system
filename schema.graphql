scalar DateTime

type Query {
  getMenus: [Menu!]!
  getOrders(dateTime: DateTime!): [Order!]!
  getMonthlySalesData(month: String!): MonthlySalesData!
}

type Mutation {
  createOrder(input: OrderInput!): ID!
  cancelOrder(id: ID!, dateTime: DateTime!): Boolean!
}

type Menu {
  id: ID!
  name: String!
  price: Float!
}

type Order {
  id: ID!
  items: [OrderItem!]!
  totalAmount: Float!
  ticketNumber: Int!
  createdAt: DateTime!
}

type OrderItem {
  name: String!
  quantity: Int!
  price: Float!
}

input OrderInput {
  items: [OrderItemInput!]!
  totalAmount: Float!
  ticketNumber: Int!
  createdAt: DateTime!
}

input OrderItemInput {
  menu: MenuInput!
  quantity: Int!
  price: Float!
}

input MenuInput {
  id: ID!
  name: String!
  price: Float!
}

type DailySales {
  date: String!
  sales: Float!
}

type MonthlySummary {
  totalSales: Float!
  totalOrders: Int!
}

type MonthlySalesData {
  monthlySummary: MonthlySummary!
  dailySales: [DailySales!]!
}
